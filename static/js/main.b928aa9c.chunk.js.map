{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","errors","handleChange","event","regExp","target","name","value","setState","prevState","replace","isValid","clearInputs","handleSubmit","preventDefault","pattern","test","props","addMovie","obj","this","onSubmit","htmlFor","onChange","type","id","cx","placeholder","onBlur","onblur","Component","App","moviesFromServer","prevstate","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b928aa9c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport * as cx from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    errors: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n  };\n\n  handleChange = (event) => {\n    const regExp = /^\\s/;\n    const { name, value } = event.target;\n\n    this.setState(prevState => ({\n      [name]: value.replace(regExp, ''),\n      errors: {\n        ...prevState.isValid,\n        [name]: false,\n      },\n    }));\n  }\n\n  clearInputs = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    // eslint-disable-next-line max-len\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    const movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    if (\n      !(title === ''\n       || description === ''\n       || (imgUrl === '' || !pattern.test(imgUrl))\n       || (imdbUrl === '' || !pattern.test(imdbUrl))\n       || imdbId === '')\n    ) {\n      this.props.addMovie(movie);\n      this.clearInputs();\n    } else {\n      this.setState((prevState) => {\n        const obj = {\n          title: false,\n          description: false,\n          imgUrl: false,\n          imdbUrl: false,\n          imdbId: false,\n        };\n\n        if (title === '') {\n          obj.title = true;\n        }\n\n        if (description === '') {\n          obj.description = true;\n        }\n\n        if (imgUrl === '' || !pattern.test(imgUrl)) {\n          obj.imgUrl = true;\n        }\n\n        if (imdbUrl === '' || !pattern.test(imdbUrl)) {\n          obj.imdbUrl = true;\n        }\n\n        if (imdbId === '') {\n          obj.imdbId = true;\n        }\n\n        return {\n          errors: {\n            title: obj.title,\n            description: obj.description,\n            imgUrl: obj.imgUrl,\n            imdbUrl: obj.imdbUrl,\n            imdbId: obj.imdbId,\n          },\n        };\n      });\n    }\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      errors,\n    } = this.state;\n\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <label htmlFor=\"movie-title\" className=\"form__label\">\n          Title\n        </label>\n        <input\n          onChange={this.handleChange}\n          type=\"text\"\n          id=\"movie-title\"\n          className={cx('form__input', { 'form__input-red': errors.title })}\n          value={title}\n          name=\"title\"\n          placeholder=\"Type title\"\n        />\n        <span\n          className={\n            cx('form__fill', { 'form__fill-all': !errors.title })\n          }\n        >\n          Empty field\n        </span>\n        <label htmlFor=\"movie-description\" className=\"form__label\">\n          Description\n        </label>\n        <input\n          onChange={this.handleChange}\n          type=\"text\"\n          id=\"movie-title\"\n          className={\n            cx('form__input', { 'form__input-red': errors.description })\n          }\n          value={description}\n          name=\"description\"\n          placeholder=\"Type description\"\n        />\n        <span\n          className={\n            cx('form__fill', { 'form__fill-all': !errors.description })\n          }\n        >\n          Empty field\n        </span>\n        <label htmlFor=\"movie-imgUrl\" className=\"form__label\">\n          imgUrl\n        </label>\n        <input\n          onChange={this.handleChange}\n          type=\"text\"\n          id=\"movie-imgUrl\"\n          className={cx('form__input', { 'form__input-red': errors.imgUrl })}\n          value={imgUrl}\n          name=\"imgUrl\"\n          placeholder=\"Type imgUrl\"\n        />\n        <span\n          className={\n            cx('form__error-Url', { 'form__right-Url': !errors.imgUrl })\n          }\n        >\n          Not valid\n        </span>\n        <label htmlFor=\"movie-imdbUrl\" className=\"form__label\">\n          imdbUrl\n        </label>\n        <input\n          onChange={this.handleChange}\n          onBlur={this.onblur}\n          type=\"text\"\n          id=\"movie-title\"\n          className={cx('form__input', { 'form__input-red': errors.imdbUrl })}\n          value={imdbUrl}\n          name=\"imdbUrl\"\n          placeholder=\"Type imdbUrl\"\n        />\n        <span\n          className={\n            cx('form__error-Url', { 'form__right-Url': !errors.imdbUrl })\n          }\n        >\n          Not valid\n        </span>\n        <label htmlFor=\"movie-imdbId\" className=\"form__label\">\n          imdbId\n        </label>\n        <input\n          onChange={this.handleChange}\n          type=\"text\"\n          id=\"movie-imdbId\"\n          className={\n            cx('form__input', { 'form__input-red': errors.imdbId })\n          }\n          value={imdbId}\n          name=\"imdbId\"\n          placeholder=\"Type imdbId\"\n        />\n        <span\n          className={\n            cx('form__fill', { 'form__fill-all': !errors.imdbId })\n          }\n        >\n          Empty field\n        </span>\n\n        <button\n          type=\"submit\"\n          className=\"form__button\"\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevstate => ({\n      movies: [\n        ...prevstate.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}