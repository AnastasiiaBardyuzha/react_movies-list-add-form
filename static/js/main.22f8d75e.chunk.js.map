{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","validImdbUrl","validImgUrl","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","pattern","isError","test","length","props","addMovie","this","onSubmit","htmlFor","onChange","type","id","placeholder","onBlur","onblur","Component","App","moviesFromServer","prevstate","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22f8d75e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    validImdbUrl: false,\n    validImgUrl: false,\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    // eslint-disable-next-line max-len\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    let isError = false;\n\n    if (!pattern.test(imgUrl)) {\n      isError = true;\n\n      this.setState({\n        validImgUrl: true,\n      });\n    }\n\n    if (!pattern.test(imdbUrl)) {\n      isError = true;\n\n      this.setState({\n        validImdbUrl: true,\n      });\n    }\n\n    if (\n      title.length > 3\n       && imdbId.length > 3\n       && description.length > 3\n       && !isError\n    ) {\n      const movie = {\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      };\n\n      this.props.addMovie(movie);\n\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n        validImdbUrl: false,\n        validImgUrl: false,\n      });\n    }\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      validImgUrl,\n      validImdbUrl,\n    } = this.state;\n\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <label htmlFor=\"movie-title\" className=\"form__label\">\n          Title\n        </label>\n        <input\n          onChange={this.handleChange}\n          type=\"text\"\n          id=\"movie-title\"\n          className={\n            `form__input ${title.length < 3 ? 'form__input-red' : ''}`\n          }\n          value={title}\n          name=\"title\"\n          placeholder=\"Type title\"\n        />\n        <span\n          className={\n            `form__fill ${title.length < 3 ? 'form__fill' : 'form__filled'}`\n          }\n        >\n          Min 3 simbols\n        </span>\n        <label htmlFor=\"movie-description\" className=\"form__label\">\n          Description\n        </label>\n        <input\n          onChange={this.handleChange}\n          type=\"text\"\n          id=\"movie-title\"\n          className={\n            `form__input ${description.length < 3 ? 'form__input-red' : ''}`\n          }\n          value={description}\n          name=\"description\"\n          placeholder=\"Type description\"\n        />\n        <span\n          className={\n            `form__fill\n            ${description.length < 3 ? 'form__fill' : 'form__filled'}`\n          }\n        >\n          Min 3 simbols\n        </span>\n        <label htmlFor=\"movie-imgUrl\" className=\"form__label\">\n          imgUrl\n        </label>\n        <input\n          onChange={this.handleChange}\n          type=\"text\"\n          id=\"movie-imgUrl\"\n          className={\n            `form__input ${validImgUrl ? 'form__input-red' : ''}`\n          }\n          value={imgUrl}\n          name=\"imgUrl\"\n          placeholder=\"Type imgUrl\"\n        />\n        <span\n          className={\n            !validImgUrl ? 'form__right-Url' : 'form__error-Url'\n          }\n        >\n          Not valid\n        </span>\n        <label htmlFor=\"movie-imdbUrl\" className=\"form__label\">\n          imdbUrl\n        </label>\n        <input\n          onChange={this.handleChange}\n          onBlur={this.onblur}\n          type=\"text\"\n          id=\"movie-title\"\n          className={\n            `form__input ${validImdbUrl ? 'form__input-red' : ''}`\n          }\n          value={imdbUrl}\n          name=\"imdbUrl\"\n          placeholder=\"Type imdbUrl\"\n        />\n        <span\n          className={\n            !validImdbUrl ? 'form__right-Url' : 'form__error-Url'\n          }\n        >\n          Not valid\n        </span>\n        <label htmlFor=\"movie-imdbId\" className=\"form__label\">\n          imdbId\n        </label>\n        <input\n          onChange={this.handleChange}\n          type=\"text\"\n          id=\"movie-imdbId\"\n          className={\n            `form__input ${imdbId.length < 3 ? 'form__input-red' : ''}`\n          }\n          value={imdbId}\n          name=\"imdbId\"\n          placeholder=\"Type imdbId\"\n        />\n        <span\n          className={\n            `form__fill ${imdbId.length < 3 ? 'form__fill' : 'form__filled'}`\n          }\n        >\n          Min 3 simbols\n        </span>\n\n        <button\n          type=\"submit\"\n          className=\"form__button\"\n        >\n          Add\n        </button>\n\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevstate => ({\n      movies: [...prevstate.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}